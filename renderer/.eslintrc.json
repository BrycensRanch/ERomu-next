{
  "$schema": "https://json.schemastore.org/eslintrc",
  "env": {
    "node": false,
    "browser": true
  },
  // Configuration for JavaScript files
  "extends": [
    "airbnb",
    "next/core-web-vitals",
    "plugin:react-hooks/recommended",
    "plugin:unicorn/recommended",
    "plugin:sonarjs/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:prettier/recommended"
  ],
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "tailwindcss", "simple-import-sort", "react-hooks"],
      "extends": [
        "plugin:playwright/recommended",
        "plugin:tailwindcss/recommended",
        "airbnb-typescript",
        "next/core-web-vitals"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": "./tsconfig.json",
        "sourceType": "module"
      },
      "env": {
        "browser": true,
        "node": false
      },
      "rules": {
        "no-console": "off",
        "unicorn/no-null": "off",
        "@typescript-eslint/indent": "off", // Avoid conflict rule between Eslint and Prettier
        "react/no-unescaped-entities": "off",
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "import/extensions": "off", // No. No. No. No. No. No. No. No. No.
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
        "import/no-extraneous-dependencies": "off",
        "node/no-unpublished-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-missing-import": "off",
        "node/no-unsupported-features/es-syntax": "off",
        "global-require": "off"
      }
    }
  ],
  "plugins": ["sonarjs", "unicorn", "unused-imports", "tailwindcss", "simple-import-sort", "react-hooks", "playwright"],
  "rules": {
    "unicorn/prefer-module": "off",
    "unicorn/prefer-top-level-await": "off",
    "unicorn/filename-case": "off",
    "unicorn/prevent-abbreviations": "off",
    "unicorn/no-null": "off",
    "node/no-unpublished-require": "off",
    "node/no-unpublished-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "global-require": "off"
  }
}
